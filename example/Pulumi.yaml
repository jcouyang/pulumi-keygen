name: example
description: A minimal Pulumi YAML program
runtime: yaml
config: {'pulumi:tags': {value: {'pulumi:template': yaml}}}
plugins:
  providers:
    - name: keygen
      path: .
variables: {}
resources:
  aws-random:
    type: keygen:awskms:Random
    properties:
      numberOfBytes: 32
  aws-kms-data-key-pair:
    type: keygen:awskms:DataKeyPair
    properties:
      keyId: alias/keygen-test
      keyPairSpec: ECC_NIST_P256
  aws-kms-data-key:
    type: keygen:awskms:DataKey
    properties:
      keyId: alias/keygen-test
      keyPairSpec: AES_256
  age-key:
    type: keygen:Age
  age-key-from-aws-rand:
    type: keygen:Age
    properties:
      random: ${aws-random.plainText}
  age-key-from-aws-aes:
    type: keygen:Age
    properties:
      random: ${aws-kms-data-key.plainText}
  age-encrypted:
    fn:invoke:
      function: keygen:age:Encrypt
      arguments:
        plaintext: hello
      return: result
  age-decrypted:
    fn:invoke:
      function: keygen:age:Decrypt
      arguments:
        ciphertext: ${age-encrypted}
      return: result
  tls-ca:
    type: tls:SelfSignedCert
    properties:
      isCaCertificate: true
      privateKeyPem: ${aws-kms-data-key-pair.privateKey}
      allowedUses:
        - cert_signing
  tls-cert-request:
    type: tls:CertRequest
    properties:
      privateKeyPem: ${aws-kms-data-key-pair.privateKey}
      subject:
        commonName: example.com
        organization: ACME Examples, Inc
  tls-cert:
    type: tls:LocallySignedCert
    properties:
      caCertPem: ${tls-ca.certificatePem}
      caPrivateKeyPem: ${tls-ca.privateKeyPem}
      certRequestPem: ${tls-cert-request.certRequestPem}
outputs:
  # key: ${age-test.key}
  age-id: ${age-key.id}
  age-key-from-aws-rand-id: ${age-key-from-aws-rand.id}
  age-key-from-aws-aes-id: ${age-key-from-aws-aes.id}
  age-decrypted: ${age-decrypted}
  cert-from-kms-keypair: ${tls-cert.certificatePem}
